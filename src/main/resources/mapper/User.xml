<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--どのマッパーに紐づくか定義する-->
<mapper namespace="com.example.Budget.Management.repository.UserRepository">

    <!--id=の部分はメソッド名 resultType=の部分は結果のオブジェクト名-->
    <!-- ユーザー名で認証情報の検索-->
    <select id="selectByUsers" resultType="com.example.Budget.Management.entity.User">
        SELECT user_name, password, authority, display_name ,email, user_id,delete_flag
        FROM authentications
        WHERE delete_flag=0
    </select>
    <select id="selectByAllUsers" resultType="com.example.Budget.Management.entity.User">
        SELECT user_name, password, authority, display_name ,email, user_id,delete_flag
        FROM authentications
    </select>

<!--    ユーザーIDからユーザー情報の検索をする-->
    <select id="selectuserByid" resultType="com.example.Budget.Management.entity.User">
        SELECT user_name, password, authority, display_name ,email, user_id, delete_flag
        FROM authentications
        WHERE user_id=#{id}
    </select>

    <select id="selectuserByuserName" resultType="com.example.Budget.Management.entity.User">
        SELECT user_name, password, authority, display_name ,email, user_id, delete_flag
        FROM authentications
        WHERE user_name=#{userName}
    </select>

    <select id="selectuserByemail" resultType="com.example.Budget.Management.entity.User">
        SELECT user_name, password, authority, display_name ,email, user_id, delete_flag
        FROM authentications
        WHERE email=#{email}
    </select>

<!--    parameterTypeは必要か？-->
    <update id="softDeleteByUser" parameterType="com.example.Budget.Management.entity.User">
        UPDATE authentications SET delete_flag =1 WHERE user_id=#{id}
    </update>
<!--    ユーザー情報の変更-->
    <update id="updateUserinf" parameterType="com.example.Budget.Management.entity.User">
        UPDATE authentications SET  user_name=#{userName},password =#{password}, authority=#{authority}, display_name=#{displayName}, email=#{email}, delete_flag=#{deleteFlag}
        WHERE user_id=#{userId}
    </update>

    <!--    パスワード以外のユーザー情報の変更-->
    <update id="updateNopass" parameterType="com.example.Budget.Management.entity.User">
        UPDATE authentications SET user_name=#{userName},authority=#{authority}, display_name=#{displayName}, email=#{email}, delete_flag=#{deleteFlag}
        WHERE user_id=#{userId}
    </update>

    <insert id="insertUserinf" parameterType="com.example.Budget.Management.entity.User">
        INSERT INTO authentications
        (user_name, password, display_name,authority, email)
        VALUES
        (#{userName},#{password}, #{displayName}, #{authority}, #{email});

    </insert>



</mapper>