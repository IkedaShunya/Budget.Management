<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--どのマッパーに紐づくか定義する-->
<mapper namespace="com.example.Budget.Management.repository.BudgetRepository">
    <select id="selectIncomeAmount" resultType="Integer">
        SELECT budget_amount
        FROM income_budget
        WHERE category_id = #{categoryId} AND year = #{selectedYear} AND month = #{selectedMonth};
    </select>
    <select id="selectExpenseAmount" resultType="Integer">
        SELECT budget_amount
        FROM expense_budget
        WHERE category_id = #{categoryId} AND year = #{selectedYear} AND month = #{selectedMonth};
    </select>

    <insert id="insertIncomeBudget" parameterType="com.example.Budget.Management.entity.IncomeBudget">
        INSERT INTO income_budget (user_id, category_id, budget_amount, year, month)
        VALUES
        (#{userId}, #{categoryId}, #{budgetAmount}, #{year},#{month});
    </insert>
    <update id="updateIncomeBudget" parameterType="com.example.Budget.Management.entity.IncomeBudget">
        UPDATE income_budget
        SET budget_amount=#{budgetAmount}
        WHERE category_id=#{categoryId} AND year = #{year} AND month = #{month};
    </update>

    <insert id="insertExpenseBudget" parameterType="com.example.Budget.Management.entity.ExpenseBudget">
        INSERT INTO expense_budget (user_id, category_id, budget_amount, year, month)
        VALUES
        (#{userId}, #{categoryId}, #{budgetAmount}, #{year},#{month});
    </insert>
    <update id="updateExpenseBudget" parameterType="com.example.Budget.Management.entity.ExpenseBudget">
        UPDATE expense_budget
        SET budget_amount=#{budgetAmount}
        WHERE category_id=#{categoryId} AND year = #{year} AND month = #{month};
    </update>

    <select id="selectLackincomeBudgetList" resultType="com.example.Budget.Management.entity.IncomeBudget">
        SELECT
        b.user_id AS userId,
        b.budget_amount AS budgetAmount,
        b.category_id AS categoryId,
        c.category_name AS categoryName,
        c.is_regular_income AS isRegularIncome,
        b.year AS year,
        b.month AS month
        FROM income_budget b
        INNER JOIN income_category c
        ON b.category_id = c.category_id
        WHERE
        <if test="incomecateIdList != null and incomecateIdList.size > 0">
            b.category_id NOT IN
            <foreach collection="incomecateIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="incomecateIdList == null or incomecateIdList.size == 0">
            1=1
        </if>
        AND b.year = #{selectedYear}
        AND b.month = #{selectedMonth}
        AND b.user_id = #{userid};
    </select>


    <select id="selectLackexpenseBudgetList" resultType="com.example.Budget.Management.entity.ExpenseBudget">
        SELECT
        b.user_id AS userId,
        b.budget_amount AS budgetAmount,
        b.category_id AS categoryId,
        c.category_name AS categoryName,
        c.is_fixed_cost AS isFixedCost,
        b.year AS year,
        b.month  AS month
        FROM expense_budget b
        INNER JOIN expense_category c
        ON b.category_id = c.category_id
        WHERE
        <if test="expensecateIdList != null and expensecateIdList.size > 0">
        b.category_id NOT IN
        <foreach collection="expensecateIdList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        </if>
        <if test="expensecateIdList == null or expensecateIdList.size == 0">
            1=1
        </if>
        AND b.year = #{selectedYear}
        AND b.month = #{selectedMonth}
        AND b.user_id = #{userid};
    </select>

</mapper>